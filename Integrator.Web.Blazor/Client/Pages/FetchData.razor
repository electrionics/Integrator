@page "/fetchdata"

@using Integrator.Web.Blazor.Shared
@using Syncfusion.Blazor.Grids;

@inject HttpClient Http


<PageTitle>Загруженные карточки товаров</PageTitle>

<h1>Загруженные карточки товаров</h1>

<p>Загруженные карчточки товаров с первично размеченными брендами и категориями.</p>

@if (cards == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <SfGrid ID="Grid"
        AllowFiltering="true" 
        AllowSorting="true" 
        AllowPaging="true"
        AllowGrouping="true"
        AllowTextWrap="true"
        AllowResizing="true"
        DataSource="@cards" 
        TValue="CardViewModel">

        <GridPageSettings PageSize="50"></GridPageSettings>
        <GridFilterSettings Type="FilterType.Excel"></GridFilterSettings>
        <GridColumns>
            <GridColumn Field="@nameof(CardViewModel.ShopName)"
                        HeaderText="Магазин"
                        Width="120" 
                        AllowFiltering="true"/>
            <GridColumn Field="@nameof(CardViewModel.CardId)"
                        HeaderText="Номер карточки"
                        Width="100"
                        AllowFiltering="true"
                        AllowGrouping="false">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.CardPathSource)"
                        HeaderText="Путь карточки (исходн.)"
                        Width="200"
                        AllowFiltering="true"
                        AllowGrouping="true"/>
            <GridColumn Field="@nameof(CardViewModel.CardPathEng)"
                        HeaderText="Путь карточки (англ.)"
                        Width="200"
                        AllowFiltering="true"
                        AllowGrouping="true" />
            @*<GridColumn Field="@nameof(CardViewModel.CardPathRus)"
                        HeaderText="Путь карточки (рус.)"
                        Width="200"
                        AllowFiltering="true"
                        AllowGrouping="true" />*@
            <GridColumn Field="@nameof(CardViewModel.ImageUrls)"
                        HeaderText="Изображения"
                        Width="100"
                        AllowFiltering="false"
                        AllowGrouping="false">
                <Template>
                    @{
                        var model = (CardViewModel)context;
                        foreach (var url in model.ImageUrls)
                        {
                            <a href="@url" target="_blank">
                                <img height="100" src="@url"/>
                            </a>
                            break;
                        }
                    }
                </Template>
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.CategoryName)"
                        HeaderText="Категория"
                        Width="130"
                        AllowFiltering="true"
                        AllowGrouping="true" />
            <GridColumn Field="@nameof(CardViewModel.BrandName)"
                        HeaderText="Бренд"
                        Width="100"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.Price)"
                        HeaderText="Цена"
                        Width="100"
                        AllowFiltering="true"
                        AllowGrouping="true" />
            <GridColumn Field="@nameof(CardViewModel.Color)"
                        HeaderText="Цвет"
                        Width="100"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.SizeStr)"
                        HeaderText="Размеры"
                        Width="120"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.Information)"
                        HeaderText="Информация"
                        Width="150"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>d
            <GridColumn Field="@nameof(CardViewModel.SourceContent)"
                        HeaderText="Описание (исходн.)"
                        Width="250"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.EngContent)"
                        HeaderText="Описание (англ.)"
                        Width="300"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
            <GridColumn Field="@nameof(CardViewModel.RusContent)"
                        HeaderText="Описание (рус.)"
                        Width="300"
                        AllowFiltering="true"
                        AllowGrouping="true">
            </GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    private CardViewModel[]? cards;

    protected override async Task OnInitializedAsync()
    {
        cards = await Http.GetFromJsonAsync<CardViewModel[]>("Cards");
    }
}
